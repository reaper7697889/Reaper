// src/backend/models/Block.js

class Block {
  /**
   * @param {string} id - Unique ID for the block (e.g., UUID).
   * @param {number} note_id - ID of the workspace_page note this block belongs to.
   * @param {string} type - Type of the block (e.g., "text", "heading1", "todo").
   * @param {string | object} content - JSON representation of block data.
   * @param {number} block_order - Order of the block within its parent (page or block).
   * @param {string | null} parent_id - ID of the parent block if nested.
   * @param {string | null} created_at - ISO timestamp string.
   * @param {string | null} updated_at - ISO timestamp string.
   */
  constructor(
    id,
    note_id,
    type,
    content,
    block_order,
    parent_id = null,
    created_at = null,
    updated_at = null
  ) {
    this.id = id; // Should be generated by the application (e.g., using uuid library)
    this.note_id = note_id;
    this.type = type;
    this.content = content; // Store as JSON string or parsed object
    this.block_order = block_order;
    this.parent_id = parent_id;
    this.created_at = created_at || new Date().toISOString();
    this.updated_at = updated_at || new Date().toISOString();
  }

  // Static methods for DB interaction (e.g., create, findByNoteId, updateOrder) would go here or in a service.
}

module.exports = Block;

